{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to MkDocs For full documentation visit mkdocs.org . Pour une question faq , help ou question Pour une question faq , help ou question Pour une question faq , help ou question C #include <stdio.h> int main ( void ) { printf ( \"Hello world! \\n \" ); return 0 ; } C++ #include <iostream> int main ( void ) { std :: cout << \"Hello world!\" << std :: endl ; return 0 ; } Commands mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. Project layout mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Accueil"},{"location":"#welcome-to-mkdocs","text":"For full documentation visit mkdocs.org . Pour une question faq , help ou question Pour une question faq , help ou question Pour une question faq , help ou question C #include <stdio.h> int main ( void ) { printf ( \"Hello world! \\n \" ); return 0 ; } C++ #include <iostream> int main ( void ) { std :: cout << \"Hello world!\" << std :: endl ; return 0 ; }","title":"Welcome to MkDocs"},{"location":"#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit.","title":"Commands"},{"location":"#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"},{"location":"prerequis/","text":"Devoir Maison @ECHO OFF start \"\" ```python def f(x): if x>0 : x=x+1 else: x=x for i in range(2): x=x+i return x f(1) ``` tinyurl.com/nnnkjnnnjnljbg Exercice 1 tinyurl.com Exercice 2 Exercice 3 \u274c \u2705 \u26a0\ufe0f \ud83d\udc49 . https://www.webfx.com/tools/emoji-cheat-sheet/ https://fontawesome.com/v4.7.0/icons/ tinyurl.com/auikjhxtzffvdbns python for i in range(5): print(i) 0 1 2 3 4 kkk jj kkk jj kkk jj kkk jj /--- tags: === | | Devoir Maison | Term | | ------------------------------------------------------------------------------------------------- | ------ | --:| Exercice 1 ,,,kkkkkkk Exercice 1 nn LLL Bonjour, okoko Cordialement Mathieu Chr\u00e9tien Bonjour, kk Cordialement Mathieu Chr\u00e9tien Exercice 2 Bonjour, def f ( x ): if x > 0 : x = 1 else : x = 9 for i in range ( 3 ): x = x + i return x f ( 1 ) def f ( x ): if x > 0 : x = 1 else : x = 9 for i in range ( 3 ): x = x + i return x print ( f ( 1 )) 4 Exercice 3","title":"Prerequis"},{"location":"prerequis/#exercice-1","text":"tinyurl.com","title":"Exercice 1"},{"location":"prerequis/#exercice-2","text":"","title":"Exercice 2"},{"location":"prerequis/#exercice-3","text":"\u274c \u2705 \u26a0\ufe0f \ud83d\udc49 . https://www.webfx.com/tools/emoji-cheat-sheet/ https://fontawesome.com/v4.7.0/icons/ tinyurl.com/auikjhxtzffvdbns python for i in range(5): print(i) 0 1 2 3 4 kkk jj kkk jj kkk jj kkk jj /--- tags: === | | Devoir Maison | Term | | ------------------------------------------------------------------------------------------------- | ------ | --:|","title":"Exercice 3"},{"location":"prerequis/#exercice-1_1","text":",,,kkkkkkk Exercice 1 nn LLL Bonjour, okoko Cordialement Mathieu Chr\u00e9tien Bonjour, kk Cordialement Mathieu Chr\u00e9tien","title":"Exercice 1"},{"location":"prerequis/#exercice-2_1","text":"Bonjour, def f ( x ): if x > 0 : x = 1 else : x = 9 for i in range ( 3 ): x = x + i return x f ( 1 ) def f ( x ): if x > 0 : x = 1 else : x = 9 for i in range ( 3 ): x = x + i return x print ( f ( 1 )) 4","title":"Exercice 2"},{"location":"prerequis/#exercice-3_1","text":"","title":"Exercice 3"},{"location":"recettes/","text":"Livre de recettes simples QCM \u00e0 cocher, solution en regard Par Franck CHAMBON QCM \u00e0 cocher On souhaite proposer un QCM, auto corrig\u00e9. Exemple 1 Pour cet exercice sur Python, on ne regarde que si l'identifiant est valide , il pourrait \u00eatre mal choisi. Cocher les identifiants valides as Roi 2ame v413t dix n'\u0153uf huit S\u00e8te carte_six _5 %4 quatre-moins-un 2! _ Solution \u274c as ; c'est un mot r\u00e9serv\u00e9. \u2705 Roi \u274c 2ame ; interdit de commencer par un chiffre. \u2705 v413t \u2705 dix \u274c n'\u0153uf ; interdit d'utiliser ' \u2705 huit \u2705 S\u00e8te \u2705 carte_six \u2705 _5 \u274c %4 ; interdit d'utiliser % \u274c quatre-moins-un ; interdit d'utiliser - \u274c 2! ; interdit d'utiliser ! \u2705 _ M\u00e9thode 1 On utilise les cases \u00e0 cocher avec l'option cliquable. On utilise des caract\u00e8res Unicode pour les r\u00e9ponses, \u274c et \u2705. On utilise les SuperFences Dans mkdocs.yml markdown_extensions : - pymdownx.tabbed - pymdownx.superfences Dans le source Pour cet exercice sur Python, on ne regarde que **si l'identifiant est valide** , il pourrait \u00eatre mal choisi. === \"Cocher les identifiants valides\" - [ ] `as` - [ ] `Roi` - [ ] `2ame` - [ ] `v413t` - [ ] `dix` - [ ] `n'\u0153uf` - [ ] `huit` - [ ] `S\u00e8te` - [ ] `carte_six` - [ ] `_5` - [ ] `%4` - [ ] `quatre-moins-un` - [ ] `2!` - [ ] `_` === \"Solution\" - \u274c `as` ; c'est un mot r\u00e9serv\u00e9. - \u2705 `Roi` - \u274c `2ame` ; interdit de commencer par un chiffre. - \u2705 `v413t` - \u2705 `dix` - \u274c `n'\u0153uf` ; interdit d'utiliser `'` - \u2705 `huit` - \u2705 `S\u00e8te` - \u2705 `carte_six` - \u2705 `_5` - \u2705 `_` - \u274c `%4` ; interdit d'utiliser `%` - \u274c `quatre-moins-un` ; interdit d'utiliser `-` - \u274c `2!` ; interdit d'utiliser `!` - \u2705 `_` Exemple 2 Cocher le meilleur identifiant pour une variable Python. Propositions pv p_vie points_vie les_points_de_vie R\u00e9ponse \u274c pv \u274c p_vie \u2705 points_vie \u274c les_points_de_vie M\u00e9thode 2 On utilise les cases \u00e0 cocher avec l'option cliquable On utilise des caract\u00e8res Unicode pour les r\u00e9ponses, \u274c et \u2705 On utilise les Admonitions Avec la possibilit\u00e9 details Dans mkdocs.yml markdown_extensions : - admonition - pymdownx.details Dans le source !!! done \"Exemple 2\" Cocher le meilleur identifiant pour une variable Python. !!! faq \"Propositions\" - [ ] `pv` - [ ] `p_vie` - [ ] `points_vie` - [ ] `les_points_de_vie` ??? done \"R\u00e9ponse\" - \u274c `pv` - \u274c `p_vie` - \u2705 `points_vie` - \u274c `les_points_de_vie` Exemples de coloration syntaxique Par Franck CHAMBON Les math\u00e9matiques Colorer les maths On peut colorer Python en ligne avec `#!python for i in range(10): print(i)` Ce qui donne for i in range ( 10 ): print ( i ) On souhaite pouvoir faire `#!math $\\mathrm{e}^{\\mathrm{i}\\pi} + 1 = 0$` Mais le r\u00e9sultat $\\mathrm{e}^{\\mathrm{i}\\pi} + 1 = 0$ est non color\u00e9... De m\u00eame en utilisant `#!mardown $\\mathrm{e}^{\\mathrm{i}\\pi} + 1 = 0$` Exemple On aimerait avoir $ \\mathrm {e}^{ \\mathrm {i} \\pi } + 1 = 0 $ M\u00e9thode On utilise le lexer latex \u00e0 la place de math . Solution `#!latex $\\mathrm{e}^{\\mathrm{i}\\pi} + 1 = 0$` De m\u00eame pour les maths en mode \u00e9quation. Les sessions de Terminal Colorer une session Il existe le mot cl\u00e9 console qui fonctionne diff\u00e9remment de bash Exemple Correct Entr\u00e9e ```console $ python --version Python 3.8.5 $ pip --version pip 21.0.1 from .../lib/python3.8/site-packages/pip (python 3.8) ``` Rendu $ python --version Python 3.8.5 $ pip --version pip 21.0.1 from .../lib/python3.8/site-packages/pip (python 3.8) Incorrect Entr\u00e9e ```bash $ python --version Python 3 .8.5 $ pip --version pip 21 .0.1 from .../lib/python3.8/site-packages/pip ( python 3 .8 ) ``` Rendu $ python --version Python 3 .8.5 $ pip --version pip 21 .0.1 from .../lib/python3.8/site-packages/pip ( python 3 .8 ) La commande et le r\u00e9sultat ne se d\u00e9tachent pas. Des modifications \u00e0 apporter Typos, ajouts, retrait On souhaite indiquer une liste de modifications mineures. Exemple Correct Entr\u00e9e ```diff -vous attend! +vous attend ! -par un espace +par une espace -la fonction retourne +la fonction renvoie -Netiquette +N\u00e9tiquette ``` Rendu -vous attend! +vous attend ! -par un espace +par une espace -la fonction retourne +la fonction renvoie -Netiquette +N\u00e9tiquette Passable Entr\u00e9e ``` -vous attend! +vous attend ! -par un espace +par une espace -la fonction retourne +la fonction renvoie -Netiquette +N\u00e9tiquette ``` Rendu -vous attend! +vous attend ! -par un espace +par une espace -la fonction retourne +la fonction renvoie -Netiquette +N\u00e9tiquette Il manque la coloration syntaxique. Image cliquable Rappels Un lien s'obtient avec [<\u00e9l\u00e9ment \u00e0 cliquer>](<url>) Une image s'obtient avec ![<texte alternatif>](<source_image>) Pour avoir une image cliquable [![<texte alternatif>](<source_image>)](<url>)","title":"recettes"},{"location":"recettes/#livre-de-recettes-simples","text":"","title":"Livre de recettes simples"},{"location":"recettes/#qcm-a-cocher-solution-en-regard","text":"Par Franck CHAMBON QCM \u00e0 cocher On souhaite proposer un QCM, auto corrig\u00e9. Exemple 1 Pour cet exercice sur Python, on ne regarde que si l'identifiant est valide , il pourrait \u00eatre mal choisi. Cocher les identifiants valides as Roi 2ame v413t dix n'\u0153uf huit S\u00e8te carte_six _5 %4 quatre-moins-un 2! _ Solution \u274c as ; c'est un mot r\u00e9serv\u00e9. \u2705 Roi \u274c 2ame ; interdit de commencer par un chiffre. \u2705 v413t \u2705 dix \u274c n'\u0153uf ; interdit d'utiliser ' \u2705 huit \u2705 S\u00e8te \u2705 carte_six \u2705 _5 \u274c %4 ; interdit d'utiliser % \u274c quatre-moins-un ; interdit d'utiliser - \u274c 2! ; interdit d'utiliser ! \u2705 _ M\u00e9thode 1 On utilise les cases \u00e0 cocher avec l'option cliquable. On utilise des caract\u00e8res Unicode pour les r\u00e9ponses, \u274c et \u2705. On utilise les SuperFences Dans mkdocs.yml markdown_extensions : - pymdownx.tabbed - pymdownx.superfences Dans le source Pour cet exercice sur Python, on ne regarde que **si l'identifiant est valide** , il pourrait \u00eatre mal choisi. === \"Cocher les identifiants valides\" - [ ] `as` - [ ] `Roi` - [ ] `2ame` - [ ] `v413t` - [ ] `dix` - [ ] `n'\u0153uf` - [ ] `huit` - [ ] `S\u00e8te` - [ ] `carte_six` - [ ] `_5` - [ ] `%4` - [ ] `quatre-moins-un` - [ ] `2!` - [ ] `_` === \"Solution\" - \u274c `as` ; c'est un mot r\u00e9serv\u00e9. - \u2705 `Roi` - \u274c `2ame` ; interdit de commencer par un chiffre. - \u2705 `v413t` - \u2705 `dix` - \u274c `n'\u0153uf` ; interdit d'utiliser `'` - \u2705 `huit` - \u2705 `S\u00e8te` - \u2705 `carte_six` - \u2705 `_5` - \u2705 `_` - \u274c `%4` ; interdit d'utiliser `%` - \u274c `quatre-moins-un` ; interdit d'utiliser `-` - \u274c `2!` ; interdit d'utiliser `!` - \u2705 `_` Exemple 2 Cocher le meilleur identifiant pour une variable Python. Propositions pv p_vie points_vie les_points_de_vie R\u00e9ponse \u274c pv \u274c p_vie \u2705 points_vie \u274c les_points_de_vie M\u00e9thode 2 On utilise les cases \u00e0 cocher avec l'option cliquable On utilise des caract\u00e8res Unicode pour les r\u00e9ponses, \u274c et \u2705 On utilise les Admonitions Avec la possibilit\u00e9 details Dans mkdocs.yml markdown_extensions : - admonition - pymdownx.details Dans le source !!! done \"Exemple 2\" Cocher le meilleur identifiant pour une variable Python. !!! faq \"Propositions\" - [ ] `pv` - [ ] `p_vie` - [ ] `points_vie` - [ ] `les_points_de_vie` ??? done \"R\u00e9ponse\" - \u274c `pv` - \u274c `p_vie` - \u2705 `points_vie` - \u274c `les_points_de_vie`","title":"QCM \u00e0 cocher, solution en regard"},{"location":"recettes/#exemples-de-coloration-syntaxique","text":"Par Franck CHAMBON","title":"Exemples de coloration syntaxique"},{"location":"recettes/#les-mathematiques","text":"Colorer les maths On peut colorer Python en ligne avec `#!python for i in range(10): print(i)` Ce qui donne for i in range ( 10 ): print ( i ) On souhaite pouvoir faire `#!math $\\mathrm{e}^{\\mathrm{i}\\pi} + 1 = 0$` Mais le r\u00e9sultat $\\mathrm{e}^{\\mathrm{i}\\pi} + 1 = 0$ est non color\u00e9... De m\u00eame en utilisant `#!mardown $\\mathrm{e}^{\\mathrm{i}\\pi} + 1 = 0$` Exemple On aimerait avoir $ \\mathrm {e}^{ \\mathrm {i} \\pi } + 1 = 0 $ M\u00e9thode On utilise le lexer latex \u00e0 la place de math . Solution `#!latex $\\mathrm{e}^{\\mathrm{i}\\pi} + 1 = 0$` De m\u00eame pour les maths en mode \u00e9quation.","title":"Les math\u00e9matiques"},{"location":"recettes/#les-sessions-de-terminal","text":"Colorer une session Il existe le mot cl\u00e9 console qui fonctionne diff\u00e9remment de bash Exemple Correct Entr\u00e9e ```console $ python --version Python 3.8.5 $ pip --version pip 21.0.1 from .../lib/python3.8/site-packages/pip (python 3.8) ``` Rendu $ python --version Python 3.8.5 $ pip --version pip 21.0.1 from .../lib/python3.8/site-packages/pip (python 3.8) Incorrect Entr\u00e9e ```bash $ python --version Python 3 .8.5 $ pip --version pip 21 .0.1 from .../lib/python3.8/site-packages/pip ( python 3 .8 ) ``` Rendu $ python --version Python 3 .8.5 $ pip --version pip 21 .0.1 from .../lib/python3.8/site-packages/pip ( python 3 .8 ) La commande et le r\u00e9sultat ne se d\u00e9tachent pas.","title":"Les sessions de Terminal"},{"location":"recettes/#des-modifications-a-apporter","text":"Typos, ajouts, retrait On souhaite indiquer une liste de modifications mineures. Exemple Correct Entr\u00e9e ```diff -vous attend! +vous attend ! -par un espace +par une espace -la fonction retourne +la fonction renvoie -Netiquette +N\u00e9tiquette ``` Rendu -vous attend! +vous attend ! -par un espace +par une espace -la fonction retourne +la fonction renvoie -Netiquette +N\u00e9tiquette Passable Entr\u00e9e ``` -vous attend! +vous attend ! -par un espace +par une espace -la fonction retourne +la fonction renvoie -Netiquette +N\u00e9tiquette ``` Rendu -vous attend! +vous attend ! -par un espace +par une espace -la fonction retourne +la fonction renvoie -Netiquette +N\u00e9tiquette Il manque la coloration syntaxique.","title":"Des modifications \u00e0 apporter"},{"location":"recettes/#image-cliquable","text":"Rappels Un lien s'obtient avec [<\u00e9l\u00e9ment \u00e0 cliquer>](<url>) Une image s'obtient avec ![<texte alternatif>](<source_image>) Pour avoir une image cliquable [![<texte alternatif>](<source_image>)](<url>)","title":"Image cliquable"},{"location":"test/","text":"Devoir Maison @ECHO OFF start \"\" ```python def f(x): if x>0 : x=x+1 else: x=x for i in range(2): x=x+i return x f(1) ``` tinyurl.com/nnnkjnnnjnljbg Exercice 1 tinyurl.com Exercice 2 Exercice 3 \u274c \u2705 \u26a0\ufe0f \ud83d\udc49 . https://www.webfx.com/tools/emoji-cheat-sheet/ https://fontawesome.com/v4.7.0/icons/ tinyurl.com/auikjhxtzffvdbns python for i in range(5): print(i) 0 1 2 3 4 kkk jj kkk jj kkk jj kkk jj /--- tags: === | | Devoir Maison | Term | | ------------------------------------------------------------------------------------------------- | ------ | --:| Exercice 1 ,,,kkkkkkk Exercice 1 nn LLL Bonjour, okoko Cordialement Mathieu Chr\u00e9tien Bonjour, kk Cordialement Mathieu Chr\u00e9tien Exercice 2 Bonjour, def f ( x ): if x > 0 : x = 1 else : x = 9 for i in range ( 3 ): x = x + i return x f ( 1 ) def f ( x ): if x > 0 : x = 1 else : x = 9 for i in range ( 3 ): x = x + i return x print ( f ( 1 )) 4 Exercice 3","title":"test"},{"location":"test/#exercice-1","text":"tinyurl.com","title":"Exercice 1"},{"location":"test/#exercice-2","text":"","title":"Exercice 2"},{"location":"test/#exercice-3","text":"\u274c \u2705 \u26a0\ufe0f \ud83d\udc49 . https://www.webfx.com/tools/emoji-cheat-sheet/ https://fontawesome.com/v4.7.0/icons/ tinyurl.com/auikjhxtzffvdbns python for i in range(5): print(i) 0 1 2 3 4 kkk jj kkk jj kkk jj kkk jj /--- tags: === | | Devoir Maison | Term | | ------------------------------------------------------------------------------------------------- | ------ | --:|","title":"Exercice 3"},{"location":"test/#exercice-1_1","text":",,,kkkkkkk Exercice 1 nn LLL Bonjour, okoko Cordialement Mathieu Chr\u00e9tien Bonjour, kk Cordialement Mathieu Chr\u00e9tien","title":"Exercice 1"},{"location":"test/#exercice-2_1","text":"Bonjour, def f ( x ): if x > 0 : x = 1 else : x = 9 for i in range ( 3 ): x = x + i return x f ( 1 ) def f ( x ): if x > 0 : x = 1 else : x = 9 for i in range ( 3 ): x = x + i return x print ( f ( 1 )) 4","title":"Exercice 2"},{"location":"test/#exercice-3_1","text":"","title":"Exercice 3"},{"location":"toto/","text":"tttt jj mmm kkk jhjhj ll kkk jhjhj ll mm ll mmm koukou lirikouo","title":"toto"}]}